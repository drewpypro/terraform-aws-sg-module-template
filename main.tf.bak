
locals {
  sg_definitions = jsondecode(file("${path.module}/sg_rules.json"))
}

# Create Security Groups
resource "aws_security_group" "sg" {
  for_each    = { for sg in local.sg_definitions.security_groups : sg.name => sg }
  name        = each.value.name
  description = each.value.description
  vpc_id      = each.value.vpc_id

  # Add self rule inline if specified
  dynamic "ingress" {
    for_each = each.value.self_rule ? [1] : []
    content {
      description = "self = true"
      from_port   = 0
      to_port     = 0
      protocol    = "tcp"
      self        = true
    }
  }

  dynamic "egress" {
    for_each = each.value.self_rule ? [1] : []
    content {
      description = "self = true"
      from_port   = 0
      to_port     = 0
      protocol    = "tcp"
      self        = true
    }
  }
}

# Create Egress/Ingress Rules as Defined
resource "aws_vpc_security_group_egress_rule" "egress_rule" {
  for_each = {
    for sg in local.sg_definitions.security_groups :
    "${sg.name}-egress-${index}" => rule for sg in local.sg_definitions.security_groups for index, rule in sg.rules if rule.direction == "egress"
  }

  security_group_id = aws_security_group.sg[each.key].id

  # Only set values if they are not null
  from_port                = each.value.from_port
  to_port                  = each.value.to_port
  ip_protocol              = each.value.ip_protocol
  referenced_security_group_id = each.value.referenced_security_group_id != null ? each.value.referenced_security_group_id : null
  cidr_ipv4                = each.value.cidr_ipv4 != null ? each.value.cidr_ipv4 : null
  cidr_ipv6                = each.value.cidr_ipv6 != null ? each.value.cidr_ipv6 : null
}

resource "aws_vpc_security_group_ingress_rule" "ingress_rule" {
  for_each = {
    for sg in local.sg_definitions.security_groups :
    "${sg.name}-ingress-${index}" => rule for sg in local.sg_definitions.security_groups for index, rule in sg.rules if rule.direction == "ingress"
  }

  security_group_id = aws_security_group.sg[each.key].id

  # Only set values if they are not null
  from_port                = each.value.from_port
  to_port                  = each.value.to_port
  ip_protocol              = each.value.ip_protocol
  referenced_security_group_id = each.value.referenced_security_group_id != null ? each.value.referenced_security_group_id : null
  cidr_ipv4                = each.value.cidr_ipv4 != null ? each.value.cidr_ipv4 : null
  cidr_ipv6                = each.value.cidr_ipv6 != null ? each.value.cidr_ipv6 : null
}